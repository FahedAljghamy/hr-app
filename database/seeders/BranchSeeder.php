<?php

/**
 * Author: Eng.Fahed
 * Professional Branch Seeder for HR System
 * ุฅูุดุงุก ูุฑูุน ุงุญุชุฑุงููุฉ ููู ูุคุณุณุฉ
 */

namespace Database\Seeders;

use Illuminate\Database\Console\Seeds\WithoutModelEvents;
use Illuminate\Database\Seeder;
use App\Models\Branch;
use App\Models\Tenant;

class BranchSeeder extends Seeder
{
    /**
     * Run the database seeds.
     */
    public function run(): void
    {
        $tenants = Tenant::all();

        foreach ($tenants as $tenant) {
            echo "๐ข Creating branches for: {$tenant->name}\n";
            
            // ุชุญุฏูุฏ ุนุฏุฏ ุงููุฑูุน ุญุณุจ ููุน ุงููุคุณุณุฉ
            $branchCount = $this->getBranchCountForTenant($tenant);
            
            for ($i = 1; $i <= $branchCount; $i++) {
                $branchData = $this->generateBranchData($tenant, $i);
                
                Branch::create($branchData);
                echo "  โ Created: {$branchData['name']}\n";
            }
        }
        
        echo "\n๐ All branches created successfully!\n";
    }

    /**
     * ุชุญุฏูุฏ ุนุฏุฏ ุงููุฑูุน ุญุณุจ ุงููุคุณุณุฉ
     */
    private function getBranchCountForTenant(Tenant $tenant): int
    {
        // ุญุณุจ ุญุฌู ุงููุคุณุณุฉ ุฃู ููุนูุง
        $companyName = strtolower($tenant->name);
        
        if (str_contains($companyName, 'tech') || str_contains($companyName, 'software')) {
            return rand(2, 4); // ุดุฑูุงุช ุงูุชูููููุฌูุง: 2-4 ูุฑูุน
        } elseif (str_contains($companyName, 'medical') || str_contains($companyName, 'hospital')) {
            return rand(3, 6); // ุงููุคุณุณุงุช ุงูุทุจูุฉ: 3-6 ูุฑูุน
        } elseif (str_contains($companyName, 'education') || str_contains($companyName, 'school')) {
            return rand(2, 5); // ุงููุคุณุณุงุช ุงูุชุนููููุฉ: 2-5 ูุฑูุน
        } else {
            return rand(1, 3); // ุจุงูู ุงููุคุณุณุงุช: 1-3 ูุฑูุน
        }
    }

    /**
     * ุฅูุดุงุก ุจูุงูุงุช ุงููุฑุน
     */
    private function generateBranchData(Tenant $tenant, int $branchNumber): array
    {
        $cities = ['ุฏูุดู', 'ุญูุจ', 'ุญูุต', 'ุงููุงุฐููุฉ', 'ุทุฑุทูุณ', 'ุฏุฑุนุง', 'ุงูุณููุฏุงุก', 'ุงููููุทุฑุฉ'];
        $city = $cities[array_rand($cities)];
        
        $branchTypes = [
            'ุงููุฑุน ุงูุฑุฆูุณู',
            'ูุฑุน ' . $city,
            'ูุฑูุฒ ' . $city,
            'ููุชุจ ' . $city,
            'ูุฑุน ' . $city . ' ุงูุชุฌุงุฑู'
        ];
        
        $managers = [
            'ุฃุญูุฏ ูุญูุฏ ุงูุณููุฏุงุก',
            'ูุงุทูุฉ ุนูู ุงูุญุณู', 
            'ูุญูุฏ ุณุงูุฑ ุงููุฑู',
            'ููุฑ ุงูุฏูู ุงูุนูู',
            'ุณุงุฑุฉ ุฃุญูุฏ ุงููุฌุงุฑ',
            'ุนูุงุฑ ูุญููุฏ ุงูุดุงู',
            'ุฑูู ุณุนุฏ ุงูุฏูู',
            'ุทุงุฑู ุนุจุฏ ุงููู'
        ];

        $workingHours = [
            ['start' => '08:00', 'end' => '16:00'],
            ['start' => '09:00', 'end' => '17:00'],
            ['start' => '08:30', 'end' => '16:30'],
            ['start' => '09:00', 'end' => '18:00'],
        ];

        return [
            'name' => $branchNumber === 1 ? 'ุงููุฑุน ุงูุฑุฆูุณู' : $branchTypes[array_rand($branchTypes)],
            'address' => $this->generateAddress($city),
            'location' => $city . ', ุณูุฑูุง',
            'phone' => '+963-' . rand(11, 99) . '-' . rand(1000000, 9999999),
            'email' => strtolower(str_replace(' ', '', $city)) . $branchNumber . '@' . $this->getDomainFromTenant($tenant),
            'manager_name' => $managers[array_rand($managers)],
            'working_hours' => $workingHours[array_rand($workingHours)],
            'is_active' => $branchNumber <= 2 ? true : (rand(1, 10) > 2), // ุงููุฑูุน ุงูุฃููู ูุดุทุฉุ ุงูุจุงูู 80% ูุดุทุฉ
            'description' => $this->generateDescription($tenant, $branchNumber),
            'tenant_id' => $tenant->id,
        ];
    }

    /**
     * ุฅูุดุงุก ุนููุงู ูุงูุนู
     */
    private function generateAddress(string $city): string
    {
        $streets = [
            'ุดุงุฑุน ุงูุซูุฑุฉ',
            'ุดุงุฑุน ุจุบุฏุงุฏ', 
            'ุดุงุฑุน ุงูุฌูุงุก',
            'ุดุงุฑุน ุงููุตุฑ',
            'ุดุงุฑุน ุงููุญุฏุฉ',
            'ุดุงุฑุน ุงูุนุฑูุจุฉ',
            'ุดุงุฑุน ุงูููุฑููุด',
            'ุดุงุฑุน ุงูุฌุงูุนุฉ'
        ];
        
        $street = $streets[array_rand($streets)];
        $building = rand(1, 200);
        
        return "{$street}ุ ูุจูู ุฑูู {$building}ุ {$city}ุ ุณูุฑูุง";
    }

    /**
     * ุงุณุชุฎุฑุงุฌ domain ูู ุงูู tenant
     */
    private function getDomainFromTenant(Tenant $tenant): string
    {
        return $tenant->domain ?: 'company.com';
    }

    /**
     * ุฅูุดุงุก ูุตู ูููุฑุน
     */
    private function generateDescription(Tenant $tenant, int $branchNumber): string
    {
        if ($branchNumber === 1) {
            return "ุงููุฑุน ุงูุฑุฆูุณู ูุดุฑูุฉ {$tenant->name} ููุถู ุงูุฅุฏุงุฑุฉ ุงูุนุงูุฉ ูุงูุฃูุณุงู ุงูุฑุฆูุณูุฉ.";
        }
        
        $descriptions = [
            "ูุฑุน ูุชุฎุตุต ูู ุฎุฏูุฉ ุงูุนููุงุก ูุชูุฏูู ุงูุงุณุชุดุงุฑุงุช.",
            "ูุฑูุฒ ุฅููููู ูุฎุฏู ุงูููุทูุฉ ููููุฑ ุฌููุน ุงูุฎุฏูุงุช.",
            "ูุฑุน ุชุฌุงุฑู ูุชุฎุตุต ูู ุงููุจูุนุงุช ูุงูุชุณููู.",
            "ููุชุจ ุฅุฏุงุฑู ูุถู ูุณู ุงูููุงุฑุฏ ุงูุจุดุฑูุฉ ูุงููุงููุฉ.",
            "ูุฑุน ุญุฏูุซ ูุฌูุฒ ุจุฃุญุฏุซ ุงูุชูููุงุช ูุงููุนุฏุงุช."
        ];
        
        return $descriptions[array_rand($descriptions)];
    }
}